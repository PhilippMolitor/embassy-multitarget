[package]
name = "hal"
version = "0.1.0"
edition = "2021"
build = "build.rs"

[features]
default = ["target-none"]
target-none = []

arch-cortex-m = [
  "dep:cortex-m",
  "dep:cortex-m-rt",
  "embassy-executor/arch-cortex-m",
]

platform-stm32 = ["arch-cortex-m"]
platform-rp = ["arch-cortex-m"]

target-stm32h743 = ["platform-stm32", "embassy-stm32/stm32h743vi"]
target-stm32f466 = ["platform-stm32", "embassy-stm32/stm32f446ve"]
target-rp2040 = ["platform-rp", "dep:embassy-rp"]
#target-rp235xa = ["platform-rp", "embassy-rp/rp235xa"]
#target-rp235xb = ["platform-rp", "embassy-rp/rp235xb"]

[dependencies]
# embassy shared
embassy-executor = { workspace = true, features = [
  "defmt",
  "executor-thread",
  "executor-interrupt",
  "integrated-timers",
] }
embassy-sync = { workspace = true, features = ["defmt"] }
embassy-time = { workspace = true, features = [
  "defmt",
  "defmt-timestamp-uptime",
  "tick-hz-32_768",
] }
embassy-usb = { workspace = true, features = ["defmt"] }

# required core libraries
defmt = { workspace = true }
defmt-rtt = { workspace = true }
panic-probe = { workspace = true, features = ["print-defmt"] }
embedded-hal = { workspace = true }
embedded-hal-async = { workspace = true }

# target-relevant dependencies
cortex-m = { workspace = true, features = [
  "critical-section-single-core",
], optional = true }
cortex-m-rt = { workspace = true, optional = true }

# targets
embassy-stm32 = { workspace = true, features = [
  "rt",
  "time-driver-any",
  "unstable-pac",
  "memory-x",
  "defmt",
], optional = true }
embassy-rp = { workspace = true, features = [
  "time-driver",
  "critical-section-impl",
  "defmt",
], optional = true }
